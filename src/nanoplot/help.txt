usage: NanoPlot [-h] [-v] [-t THREADS] [--verbose] [--store] [--raw]
      [-o OUTDIR] [-p PREFIX] [--maxlength N] [--minlength N]
      [--drop_outliers] [--downsample N] [--loglength] [--alength]
      [--minqual N] [--readtype {1D,2D,1D2}] [--barcoded] [-c COLOR]
      [-f {eps,jpeg,jpg,pdf,pgf,png,ps,raw,rgba,svg,svgz,tif,tiff}]
      [--plots [{kde,hex,dot,pauvre} [{kde,hex,dot,pauvre} ...]]]
      [--listcolors] [--no-N50] [--title TITLE]
      (--fastq file [file ...] | --fastq_rich file [file ...] | --fastq_minimal file [file ...] | --summary file [file ...] | --bam file [file ...] | --cram file [file ...] | --pickle pickle)

CREATES VARIOUS PLOTS FOR OXFORD NANOPORE SEQUENCING DATA.

General options:
-h, --help            show the help and exit
-v, --version         Print version and exit.
-t, --threads THREADS
              Set the allowed number of threads to be used by the script
--verbose             Write log messages also to terminal.
--store               Store the extracted data in a pickle file for future plotting.     
--raw                 Store the extracted data in tab separated file.
-o, --outdir OUTDIR   Specify directory in which output has to be created.
-p, --prefix PREFIX   Specify an optional prefix to be used for the output files.        

Options for filtering or transforming input prior to plotting:
--maxlength N         Drop reads longer than length specified.
--minlength N         Drop reads shorter than length specified.
--drop_outliers       Drop outlier reads with extreme long length.
--downsample N        Reduce dataset to N reads by random sampling.
--loglength           Logarithmic scaling of lengths in plots.
--alength             Use aligned read lengths rather than sequenced length (bam mode)   
--minqual N           Drop reads with an average quality lower than specified.
--readtype {1D,2D,1D2}
              Which read type to extract information about from summary. Options are 1D, 2D,
              1D2
--barcoded            Use if you want to split the summary file by barcode

Options for customizing the plots created:
-c, --color COLOR     Specify a color for the plots, must be a valid matplotlib color    
-f, --format {eps,jpeg,jpg,pdf,pgf,png,ps,raw,rgba,svg,svgz,tif,tiff}
              Specify the output format of the plots.
--plots [{kde,hex,dot,pauvre} [{kde,hex,dot,pauvre} ...]]
              Specify which bivariate plots have to be made.
--listcolors          List the colors which are available for plotting and exit.
--no-N50              Hide the N50 mark in the read length histogram
--title TITLE         Add a title to all plots, requires quoting if using spaces

Input data sources, one of these is required.:
--fastq file [file ...]
              Data is in one or more default fastq file(s).
--fastq_rich file [file ...]
              Data is in one or more fastq file(s) generated by albacore or MinKNOW with
              additional information concerning channel and time.
--fastq_minimal file [file ...]
              Data is in one or more fastq file(s) generated by albacore or MinKNOW with
              additional information concerning channel and time. Minimal data is extracted
              swiftly without elaborate checks.
--summary file [file ...]
              Data is in one or more summary file(s) generated by albacore.      
--bam file [file ...]
              Data is in one or more sorted bam file(s).
--cram file [file ...]
              Data is in one or more sorted cram file(s).
--pickle pickle       Data is a pickle file stored earlier.

EXAMPLES:
Nanoplot --summary sequencing_summary.txt --loglength -o summary-plots-log-transformed 
NanoPlot -t 2 --fastq reads1.fastq.gz reads2.fastq.gz --maxlength 40000 --plots hex dot
NanoPlot --color yellow --bam alignment1.bam alignment2.bam alignment3.bam --downsample 10000