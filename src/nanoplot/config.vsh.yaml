name: nanoplot
description: |
  Run NanoPlot on nanopore-sequenced reads.
keywords: ["quality control", "qc", "fastq", "sequencing summary", "nanopore"]
links:
  repository: https://github.com/wdecoster/NanoPlot
  homepage: http://nanoplot.bioinf.be/
  documentation: https://nanoplot.bioinf.be/
references:
  doi: 10.1093/bioinformatics/btad311
license: MIT
argument_groups:
  - name: Inputs
    arguments:
      - name: --fastq
        type: file
        description: Data is in one or more default fastq file(s).
        example: read.fq
        multiple: true
        direction: input
      - name: --fastq_rich
        type: file
        description: |
          Data is in one or more fastq file(s) generated by albacore or 
          MinKNOW with additional information concerning channel and time.
        example: read.fq
        multiple: true
        direction: input
      - name: --fastq_minimal
        type: file
        description: |
          Data is in one or more fastq file(s) generated by albacore or MinKNOW with
          additional information concerning channel and time. Minimal data is extracted
          swiftly without elaborate checks.
        example: read.fq
        multiple: true
        direction: input
      - name: --summary
        type: file
        description: Data is in one or more summary file(s) generated by albacore.
        example: read.txt
        multiple: true
        direction: input
      - name: --bam
        type: file
        description: Data is in one or more sorted bam file(s).
        example: read.bam
        multiple: true
        direction: input
      - name: --cram
        type: file
        description: Data is in one or more sorted cram file(s).
        example: read.cram
        multiple: true
        direction: input
      - name: --pickle
        type: file
        description: Data is a pickle file stored earlier.
        example: read.pkl
        multiple: true
        direction: input
  - name: Outputs
    arguments:
      - name: --statsum
        type: file
        description: Statistical summary from NanoPlot.
        direction: output
        example: NanoStats.txt
      - name: --plots
        type: file
        description: Plots generated by NanoPlot.
        direction: output
        example: Yield_By_Length.png
      - name: --report
        type: file
        description: NanoPlot report
        direction: output
        example: NanoPlot-report.html
  - name: Options
    arguments:
      - name: --threads
        alternatives: [-t]
        type: integer
        description: Set the allowed number of threads to be used by the script.
        example: 2
      - name: --verbose
        type: boolean_true
        description: Write log messages also to terminal
      - name: --store
        type: boolean_true
        description: Store the extracted data in a pickle file for future plotting.
      - name: --raw
        type: boolean_true
        description: Store the extracted data in tab separated file.
      - name: --prefix
        alternatives: [-p]
        type: string
        description: Specify an optional prefix to be used for the output files.
  - name: Filtering or transforming input 
    arguments:
      - name: --maxlength
        type: integer
        description: Drop reads longer than length specified.
      - name: --minlength
        type: integer
        description: Drop reads shorter than length specified.
      - name: --drop_outliers
        type: boolean_false
        description: Drop outlier reads with extreme long length.
      - name: --downsample
        type: integer
        description: Reduce dataset to N reads by random sampling.
      - name: --loglength
        type: boolean_true
        description: Logarithmic scaling of lengths in plots.
      - name: --alength
        type: boolean_true
        description: Use aligned read lengths rather than sequenced length (bam mode)  
      - name: --minequal
        type: integer
        description: Drop reads with an average quality lower than specified.
      - name: --readtype
        type: string
        description: |
          Which read type to extract information about from summary.
          Options are 1D, 2D, 1D2
      - name: --barcoded
        type: boolean_true
        description: Use if you want to split the summary file by barcode.
  - name: Customizing plots
    arguments:
      - name: --color
        alternatives: [-c]
        type: string
        description: Specify a color for the plots, must be a valid matplotlib color.
      - name: --format
        alternatives: [-f]
        type: string
        description: |
          Specify the output format of the plots.
          {eps,jpeg,jpg,pdf,pgf,png,ps,raw,rgba,svg,svgz,tif,tiff}
      - name: --plots
        alternatives: [-f]
        type: string
        description: |
          Specify which bivariate plots have to be made.
          [{kde,hex,dot,pauvre} [{kde,hex,dot,pauvre} ...]]
      - name: --listcolors
        type: boolean_true
        description: List the colors which are available for plotting and exit.
      - name: --no-N50 
        type: boolean_false
        description: Hide the N50 mark in the read length histogram.
      - name: --title
        type: string
        description: Add a title to all plots, requires quoting if using spaces.
# Arguments not taken into account:
#    -o, --outdir    OUTDIR-Specify directory in which output has to be created.
resources:
  - type: bash_script
    path: script.sh
test_resources:
  - type: bash_script
    path: test.sh
  - type: file
    path: test_data
engines:
  - type: docker
    image: quay.io/biocontainers/nanoplot:1.42.0--pyhdfd78af_0
    setup:
      - type: docker
        run: |
          touch ./var/software_versions.txt && \
          version=$(NanoPlot --version) && \
          # version=$(docker run quay.io/biocontainers/nanoplot:1.42.0--pyhdfd78af_0 NanoPlot --version) && \
          echo "$version" > ./var/software_versions.txt
runners:
  - type: executable
  - type: nextflow