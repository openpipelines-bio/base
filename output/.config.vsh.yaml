name: "seqtk"
argument_groups:
- name: "Inputs"
  arguments:
  - type: "file"
    name: "--input"
    description: "The input FASTA/Q file."
    info: null
    example:
    - "read.fq"
    must_exist: true
    create_parent: true
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ";"
- name: "Outputs"
  arguments:
  - type: "file"
    name: "--output"
    description: "The output FASTA/Q file."
    info: null
    example:
    - "sub.fq"
    must_exist: true
    create_parent: true
    required: true
    direction: "output"
    multiple: false
    multiple_sep: ";"
- name: "Options"
  arguments:
  - type: "integer"
    name: "--seed"
    alternatives:
    - "-s"
    description: "Seed for random generator."
    info: null
    example:
    - 42
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "double"
    name: "--fraction_number"
    description: "Fraction or number of sequences to sample."
    info: null
    example:
    - 0.1
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "boolean"
    name: "--two_pass_mode"
    alternatives:
    - "-2"
    description: "Twice as slow but with much reduced memory"
    info: null
    default:
    - false
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
resources:
- type: "bash_script"
  path: "script.sh"
  is_executable: true
description: "Seqtk is a fast and lightweight tool for processing sequences in the\
  \ FASTA or FASTQ format. \nIt seamlessly parses both FASTA and FASTQ files which\
  \ \ncan also be optionally compressed by gzip. \n\"Sample\"\n"
test_resources:
- type: "bash_script"
  path: "test.sh"
  is_executable: true
- type: "file"
  path: "test_data"
info: null
status: "enabled"
requirements:
  commands:
  - "ps"
keywords:
- "tag1"
- "tag2"
license: "MIT"
links:
  repository: "https://github.com/lh3/seqtk/tree/master"
runners:
- type: "executable"
  id: "executable"
  docker_setup_strategy: "ifneedbepullelsecachedbuild"
- type: "nextflow"
  id: "nextflow"
  directives:
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: false
    transcript: false
    publish: false
  config:
    labels:
      mem1gb: "memory = 1000000000.B"
      mem2gb: "memory = 2000000000.B"
      mem5gb: "memory = 5000000000.B"
      mem10gb: "memory = 10000000000.B"
      mem20gb: "memory = 20000000000.B"
      mem50gb: "memory = 50000000000.B"
      mem100gb: "memory = 100000000000.B"
      mem200gb: "memory = 200000000000.B"
      mem500gb: "memory = 500000000000.B"
      mem1tb: "memory = 1000000000000.B"
      mem2tb: "memory = 2000000000000.B"
      mem5tb: "memory = 5000000000000.B"
      mem10tb: "memory = 10000000000000.B"
      mem20tb: "memory = 20000000000000.B"
      mem50tb: "memory = 50000000000000.B"
      mem100tb: "memory = 100000000000000.B"
      mem200tb: "memory = 200000000000000.B"
      mem500tb: "memory = 500000000000000.B"
      mem1gib: "memory = 1073741824.B"
      mem2gib: "memory = 2147483648.B"
      mem4gib: "memory = 4294967296.B"
      mem8gib: "memory = 8589934592.B"
      mem16gib: "memory = 17179869184.B"
      mem32gib: "memory = 34359738368.B"
      mem64gib: "memory = 68719476736.B"
      mem128gib: "memory = 137438953472.B"
      mem256gib: "memory = 274877906944.B"
      mem512gib: "memory = 549755813888.B"
      mem1tib: "memory = 1099511627776.B"
      mem2tib: "memory = 2199023255552.B"
      mem4tib: "memory = 4398046511104.B"
      mem8tib: "memory = 8796093022208.B"
      mem16tib: "memory = 17592186044416.B"
      mem32tib: "memory = 35184372088832.B"
      mem64tib: "memory = 70368744177664.B"
      mem128tib: "memory = 140737488355328.B"
      mem256tib: "memory = 281474976710656.B"
      mem512tib: "memory = 562949953421312.B"
      cpu1: "cpus = 1"
      cpu2: "cpus = 2"
      cpu5: "cpus = 5"
      cpu10: "cpus = 10"
      cpu20: "cpus = 20"
      cpu50: "cpus = 50"
      cpu100: "cpus = 100"
      cpu200: "cpus = 200"
      cpu500: "cpus = 500"
      cpu1000: "cpus = 1000"
  debug: false
  container: "docker"
engines:
- type: "docker"
  id: "docker"
  image: "quay.io/biocontainers/seqtk:1.4--he4a0461_2"
  namespace_separator: "/"
  setup:
  - type: "docker"
    run:
    - "# Ensure the file exists and create it if it doesn't\nsudo touch /var/software_versions.txt\n\
      # Grant write permission to the file for all users\nsudo chmod a+w /var/software_versions.txt\n\
      output=$(docker run quay.io/biocontainers/seqtk:1.4--he4a0461_2 seqtk 2>&1)\n\
      version=$(echo \"$output\" | grep \"Version:\" | awk '{print $2}')\necho \"\
      seqtk: $version\" > /var/software_versions.txt\n"
  entrypoint: []
  cmd: null
build_info:
  config: "src/seqtk_sample/config.vsh.yaml"
  runner: "executable"
  engine: "docker"
  output: "output"
  executable: "output/seqtk"
  viash_version: "0.9.0-RC6"
  git_commit: "2fa762ebe256c5f1c5b2690a05320aff706343ff"
  git_remote: "git@github.com:sumanm99/biobox.git"
package_config:
  name: "biobox"
  description: "A collection of bioinformatics tools for working with sequence data.\n"
  info: null
  viash_version: "0.9.0-RC6"
  source: "src"
  target: "target"
  config_mods:
  - ".requirements.commands := ['ps']"
  keywords:
  - "bioinformatics"
  - "modules"
  - "sequencing"
  license: "MIT"
  links:
    repository: "https://github.com/viash-hub/biobox"
    issue_tracker: "https://github.com/viash-hub/biobox/issues"
